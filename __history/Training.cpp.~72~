//---------------------------------------------------------------------------
#include <fmx.h>
#pragma hdrstop

#include "Training.h"
#include "Street.h" // Include after Training.h
#include "Beya.h"


//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.fmx"

TTrainingPopup *TrainingPopup;

//bool isTrainingComplete = false;

// Check if training is complete

int UpgradePoints = 0;

int TrainingCost;
int cost1, cost2, cost3;
String message3;
// Rikishi* SelectedRikishi = nullptr;
extern bool isTrainingComplete;
//const Rikishi* selectedRikishiForTraining = nullptr; // Global variable to track the selected rikishi

// Ensure this variable exists in the class definition (Training.h)
//bool TTrainingPopup::IsTrainingComplete = false;

// Function to close the training popup and return to the Beya
//void __fastcall TTrainingPopup::CloseTrainingPopup(const String &message) {
//	message);  // Show the message before closing
////	YourBeya->Show();      // Show the main form
////	this->Hide();          // Hide the training popup
//}

// Update the function definition to match the new parameter type:
void __fastcall TTrainingPopup::UpdateTrainingTable(Rikishi* rikishi) {
	if (isTrainingComplete) {
		ShowMessage("Training is now closed.");
		return;
	}

	if (rikishi == nullptr) {
		ShowMessage("No Rikishi selected for training.");
		return;
	}

	EditRikishiInfo->Text = " | " + String(rikishi->name.c_str()) +
		" | Age: " + IntToStr(rikishi->age) +
		" | Spirit: " + IntToStr(rikishi->spirit) +
		" | W: " + IntToStr(rikishi->weight) + "/" + IntToStr(rikishi->weightLimit) +
		" | E: " + IntToStr(rikishi->endurance) + "/" + IntToStr(rikishi->enduranceLimit) +
		" | T: " + IntToStr(rikishi->technique) + "/" + IntToStr(rikishi->techniqueLimit) +
		" | Sp: " + IntToStr(rikishi->speed) + "/" + IntToStr(rikishi->speedLimit) +
		" | St: " + IntToStr(rikishi->strength) + "/" + IntToStr(rikishi->strengthLimit);



    if (rikishi->age < 27) {
		cost1 = 0; cost2 = 2; message3 = "4"; cost3 = 4;
    } else if (rikishi->age < 31) {
		cost1 = 1; cost2 = 3; message3 = "5"; cost3 = 5;
    } else if (rikishi->age < 34) {
		cost1 = 2; cost2 = 4; message3 = "N/A"; cost3 = -1;
    } else {
		cost1 = 2; cost2 = 4; message3 = "N/A -> Only Spirit"; cost3 = -1;
    }

    ButtonOption1->Text = "1 Upgrade cost: " + IntToStr(cost1);
    ButtonOption2->Text = "2 Upgrades cost: " + IntToStr(cost2);
    ButtonOption3->Text = "3 Upgrades cost: " + message3;
}

void ReceiveTrainingRikishi(Rikishi* rikishi) {
	if (rikishi) {
		TrainingPopup->Show();
		TrainingPopup->UpdateTrainingTable(rikishi);
	} else {
		ShowMessage("No Rikishi selected for training.");
	}
}

void PayTraining(int playerIndex, int TrainingCost) {
	players[0].DeductAP(TrainingCost);
}

void DisplayAP(int playerIndex) {
	ShowMessage("You have " + IntToStr(players[playerIndex].AP) + " remaining AP!");
}

void TTrainingPopup::ReturnToBeyaPostTraining(int TrainingCost, int UpgradePoints) {
	PayTraining(0, TrainingCost);
    DisplayAP(0);
	YourBeya->CollectUpgradePoints(UpgradePoints);
	YourBeya->Show(); // Show the main form
	this->Hide();     // Hide the second form
}

//---------------------------------------------------------------------------
void __fastcall TTrainingPopup::ButtonOption1Click(TObject *Sender)
{
	TrainingCost = cost1;
	UpgradePoints = 1;
	ReturnToBeyaPostTraining(TrainingCost, UpgradePoints);
}
//---------------------------------------------------------------------------
void __fastcall TTrainingPopup::ButtonOption2Click(TObject *Sender)
{
	TrainingCost = cost2;
	UpgradePoints = 2;
	ReturnToBeyaPostTraining(TrainingCost, UpgradePoints);
}
//---------------------------------------------------------------------------
void __fastcall TTrainingPopup::ButtonOption3Click(TObject *Sender)
{
	TrainingCost = cost3;
	UpgradePoints = 3;
	ReturnToBeyaPostTraining(TrainingCost, UpgradePoints);
}

//---------------------------------------------------------------------------

void __fastcall TTrainingPopup::ButtonReturnClick(TObject *Sender)
{
	YourBeya->Show(); // Show the main form
	this->Hide();     // Hide the second form
}
//---------------------------------------------------------------------------

__fastcall TTrainingPopup::TTrainingPopup(TComponent* Owner)
	: TForm(Owner)
{

}

//---------------------------------------------------------------------------

