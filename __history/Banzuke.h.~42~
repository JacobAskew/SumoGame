//---------------------------------------------------------------------------

#ifndef BanzukeH
#define BanzukeH
//---------------------------------------------------------------------------
#include <System.Classes.hpp>
#include <FMX.Controls.hpp>
#include <FMX.Forms.hpp>
#include <FMX.Controls.Presentation.hpp>
#include <FMX.Grid.hpp>
#include <FMX.Grid.Style.hpp>
#include <FMX.ScrollBox.hpp>
#include <FMX.StdCtrls.hpp>
#include <FMX.Types.hpp>
#include <System.Rtti.hpp>
#include <FMX.Memo.hpp>
#include <FMX.Memo.Types.hpp>
#include <FMX.Edit.hpp>
#include <FMX.Objects.hpp>
//---------------------------------------------------------------------------
void EndBanzuke();
//bool IsBanzukeComplete;
//---------------------------------------------------------------------------
class TBanzukeForm : public TForm
{
__published:	// IDE-managed Components
	TButton *ButtonReturnStreet;
	TButton *ButtonNextBout;
	TButton *ButtonAutomateAll;
	TButton *ButtonNextHumanBout;
	TMemo *MemoBoutLog;
	TStringGrid *StringGridTournament;
	TStringColumn *StringColumnMonday;
	TStringColumn *StringColumnTuesday;
	TStringColumn *StringColumnWednesday;
	TStringColumn *StringColumnThursday;
	TStringColumn *StringColumnFriday;
	TStringColumn *StringColumnSaturday;
	TStringColumn *StringColumnSunday;
	TImage *ImageBelt1;
	TImage *ImageRikishi1;
	TImage *ImageYokozuna1;
	TImage *ImageBelt2;
	TImage *ImageRikishi2;
	TImage *ImageYokozuna2;
	TEdit *EditFighter1;
	TImage *ImageVS;
	TEdit *EditFighter2;
	TStringGrid *StringGridLeaderboard;
	TStringColumn *StringLeaderboard1;
	TStringColumn *StringLeaderboard2;
	TButton *ButtonDohyo;
	void __fastcall ButtonReturnStreetClick(TObject *Sender);
	void __fastcall ButtonDohyoClick(TObject *Sender);
	void __fastcall ButtonAutomateAllClick(TObject *Sender);
//	void __fastcall BanzukeGridDrawCell(TObject *Sender, TCanvas * const Canvas,
//		TGridDrawStates State, int Col, int Row, const TRectF &Bounds);
	void __fastcall StringGridTournamentDrawColumnCell(TObject *Sender, TCanvas * const Canvas,
          TColumn * const Column, const TRectF &Bounds, const int Row,
          const TValue &Value, const TGridDrawStates State);
	void __fastcall ButtonNextBoutClick(TObject *Sender);
private:	// User declarations
public:		// User declarations
	__fastcall TBanzukeForm(TComponent* Owner);
    void StartBanzuke();
};
//---------------------------------------------------------------------------
extern PACKAGE TBanzukeForm *BanzukeForm;
extern void GetBoutTactic();
extern bool isBanzukeComplete;
extern void TintNoTransparent(TBitmap* bitmap, TAlphaColor tintColor);
extern struct Rikishi* globalFighter1;
extern struct Rikishi* globalFighter2;
extern String VSpath;
extern std::string fighter1Tactic;
extern int fighter1SkillValue;
extern std::string fighter2Tactic;
extern int fighter2SkillValue;
extern void RandomSkillForFighter(Rikishi& fighter, std::string& fighterTactic);
extern void PopulateLeaderboardGrid();
extern void AssignFightersFromGrid();
extern void FighterSkillValue(Rikishi& fighter, int& fighterSkillValue);
extern void HandleInjury(Rikishi& fighter, int& fighterTotal);
int fighter1Total;
int fighter2Total;
extern void Victory(int winner);
//extern void UpdateBoutGUI(Rikishi& winner, Rikishi& loser, int boutIndex);
//---------------------------------------------------------------------------
#endif
